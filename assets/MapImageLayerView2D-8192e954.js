import{e as o,y as p,e6 as l,a as h,a2 as g,s as d,l as u}from"./index-1de34779.js";import{i as c}from"./GraphicsCollection-96c69dc0.js";import{a as y}from"./BitmapContainer-e3bd3285.js";import{f,u as x}from"./LayerView-c09ce6b8.js";import{a as w}from"./GraphicsView2D-4b7235af.js";import{n as v}from"./HighlightGraphicContainer-c7e5717c.js";import{v as _}from"./ExportStrategy-357238c9.js";import{c as H}from"./ExportImageParameters-8641ce6e.js";import{i as I}from"./RefreshableLayerView-d43c8109.js";import{S as V,a as P}from"./drapedUtils-6cd1f85a.js";import"./WGLContainer-b530f017.js";import"./MapView-bd487abe.js";import"./Viewpoint-ea32c9f1.js";import"./Cyclical-49a6a04d.js";import"./CollectionFlattener-69c675dd.js";import"./TileInfo-c53ba83b.js";import"./aaBoundingRect-da6cd5b1.js";import"./TileKey-b87e0dc5.js";import"./widget-4447051f.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-191d5abd.js";import"./Heading-bde04247.js";import"./symbolUtils-0c3c786b.js";import"./utils-47432d32.js";import"./ItemCache-edc397ee.js";import"./utils-960d8c85.js";import"./colorUtils-c0f43caf.js";import"./mat2d-e3bbc217.js";import"./webStyleSymbolUtils-1470c8f4.js";import"./devEnvironmentUtils-5002a058.js";import"./executeQueryJSON-7409703b.js";import"./utils-fd07bdbf.js";import"./query-87b53af6.js";import"./normalizeUtils-744c3a37.js";import"./normalizeUtilsCommon-5bd32cf4.js";import"./pbfQueryUtils-9e72fccf.js";import"./pbf-2cecd0ba.js";import"./OptimizedGeometry-48f8abe8.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./featureConversionUtils-b6ed3a7e.js";import"./Scheduler-895f76dc.js";import"./layerViewUtils-5da1782e.js";import"./GoTo-2f121aae.js";import"./accessibleHandler-c78ecdf0.js";import"./vmEvent-d773b6c5.js";import"./Map-183141ee.js";import"./Basemap-05b492be.js";import"./loadAll-0643270c.js";import"./writeUtils-c3a30ac3.js";import"./basemapUtils-d89c0772.js";import"./TablesMixin-a90c4927.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2-a3077e7b.js";import"./vec2f64-22afc56f.js";import"./mat3-fdb5e70d.js";import"./TileStrategy-ae37d4cf.js";import"./TileInfoView-d2de27b2.js";import"./quickselect-56c5966e.js";import"./TileKey-d02c5724.js";import"./capabilities-99358f40.js";import"./definitions-f329b961.js";import"./VertexArrayObject-a0fc2785.js";import"./Texture-33390e7d.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-0ee4e5aa.js";import"./enums-55085e26.js";import"./number-b10bd8f5.js";import"./ProgramTemplate-178dc95f.js";import"./MaterialKey-9cb0f200.js";import"./alignmentUtils-ae955d28.js";import"./utils-6e7a4f80.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./Container-8b0f7655.js";import"./EffectView-8576c2a4.js";import"./earcut-61f7b102.js";import"./cimAnalyzer-5e72cfa7.js";import"./fontUtils-a57700dc.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-fea59923.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-8e0165c7.js";import"./floatRGBA-cdbb2ff4.js";import"./normalizeUtilsSync-d732f3d9.js";import"./projectionSupport-5b721288.js";import"./json-48e3ea08.js";import"./AttributeStoreView-73dad7cd.js";import"./TiledDisplayObject-7dc31753.js";import"./visualVariablesUtils-ad619e13.js";import"./visualVariablesUtils-858312fb.js";import"./Matcher-4a8f3066.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-834f41ed.js";import"./ExpandedCIM-75485600.js";import"./schemaUtils-2cc31ebd.js";import"./createSymbolSchema-54290cca.js";import"./util-58993c04.js";import"./ComputedAttributeStorage-41117ad1.js";import"./arcadeTimeUtils-67e67338.js";import"./executionError-fb3f283a.js";import"./centroid-420f73c1.js";import"./BaseGraphicContainer-16ac3932.js";import"./FeatureContainer-cb4b5559.js";import"./TileContainer-bd636945.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-b9bf088d.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-6f5364f7.js";import"./scaleUtils-f4549cc3.js";import"./popupUtils-ad4ff3e4.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return o([p()],i.prototype,"exportImageParameters",void 0),o([p({readOnly:!0})],i.prototype,"floors",null),o([p({readOnly:!0})],i.prototype,"exportImageVersion",null),o([p()],i.prototype,"layer",void 0),o([p()],i.prototype,"suspended",void 0),o([p(l)],i.prototype,"timeExtent",void 0),i=o([h("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new c,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{g(e)||d.getLogger(this.declaredClass).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,r=e>=10.3,n=e>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,s)=>P(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:r,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,r){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,i,e,r){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t){return this._popupHighlightHelper.highlight(t)}};o([p()],m.prototype,"strategy",void 0),o([p()],m.prototype,"updating",void 0),m=o([h("esri.views.2d.layers.MapImageLayerView2D")],m);const Gi=m;export{Gi as default};
