import{e as s,y as i,a as l,b3 as S,cO as f,bo as d,U as h}from"./index-1de34779.js";import{f as g,i as y,o as O}from"./utils-fd07bdbf.js";let e=class extends S{constructor(t){super(t),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const t=this.geometries.map(a=>a.toJSON()),o=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=o.spatialReference.wkid||JSON.stringify(o.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:f(o),geometries:t}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([l("esri.rest.support.ProjectParameters")],e);const R=e,J=d(R);async function j(n,t,o){t=J(t);const r=g(n),a={...r.query,f:"json",...t.toJSON()},p=t.outSpatialReference,c=f(t.geometries[0]),m=y(a,o);return h(r.path+"/project",m).then(({data:{geometries:u}})=>O(u,c,p))}export{R as a,j as n};
