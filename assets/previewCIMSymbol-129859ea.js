import{aw as Z,ad as A,cu as F,hb as $,U as ee,b7 as te,dh as E}from"./index-1de34779.js";import{s as ae,l as K,h as X,W as ie,j as re,p as oe,O as ne}from"./cimAnalyzer-5e72cfa7.js";import{o as se}from"./CIMResourceManager-b03a1b8b.js";import{c as ce}from"./Rasterizer-7667479d.js";import{O as Q,c as he,t as _,r as J}from"./utils-960d8c85.js";import{m as le}from"./utils-47432d32.js";import{t as H,l as me}from"./symbolUtils-0c3c786b.js";import"./fontUtils-a57700dc.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-da6cd5b1.js";import"./GeometryUtils-fea59923.js";import"./enums-55085e26.js";import"./alignmentUtils-ae955d28.js";import"./definitions-f329b961.js";import"./mat2d-e3bbc217.js";import"./vec2-a3077e7b.js";import"./TileStrategy-ae37d4cf.js";import"./TileInfoView-d2de27b2.js";import"./quickselect-56c5966e.js";import"./TileKey-d02c5724.js";import"./number-b10bd8f5.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-8e0165c7.js";import"./floatRGBA-cdbb2ff4.js";import"./imageutils-e1063d3e.js";import"./_commonjsHelpers-2f3e7994.js";import"./rasterizingUtils-d220a1fd.js";import"./ItemCache-edc397ee.js";import"./colorUtils-c0f43caf.js";import"./widget-4447051f.js";import"./uuid-73213768.js";import"./webStyleSymbolUtils-1470c8f4.js";import"./devEnvironmentUtils-5002a058.js";var Y;(function(f){f.Legend="legend",f.Preview="preview"})(Y||(Y={}));const T=f=>f&&f.scaleFactor?f.scaleFactor:1,ge=96/72;class ue{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._imageDataCanvas=null,this._pictureMarkerCache=new Map,this._textRasterizer=new ae,this._cimResourceManager=new se,this._rasterizer=new ce(this._cimResourceManager)}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(e,t,n,i,a,r,h,o){if(!e)return null;const{data:c}=e;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c;r||(r=Q(C));const M=await K.resolveSymbolOverrides(c,t,this._spatialReference,a,r,h,o);this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const g=this._imageDataCanvas,m=this._cimResourceManager,d=[];X.fetchResources(M,m,d),d.length>0&&await Promise.all(d);const{width:l,height:u}=n,p=fe(r,l,u,i),s=X.getEnvelope(M,p,m);if(!s)return null;const I=(window.devicePixelRatio||1)*ge;let y=1,P=0,w=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let R=1;s.width>l&&(R=l/s.width);let k=1;s.height>u&&(k=u/s.height),i==="preview"&&(s.width<l&&(R=l/s.width),s.height<u&&(k=u/s.height)),y=Math.min(R,k),P=s.x+s.width/2,w=s.y+s.height/2}break;case"CIMLineSymbol":{let R=1;s.height>u&&(R=u/s.height),y=R,w=s.y+s.height/2;const k=s.x*y+l/2,z=(s.x+s.width)*y+l/2;if(k<0){const{paths:b}=p;b[0][0][0]-=k}if(z>l){const{paths:b}=p;b[0][2][0]-=z-l}}break;case"CIMPolygonSymbol":{P=s.x+s.width/2,w=s.y+s.height/2;const R=s.x*y+l/2,k=(s.x+s.width)*y+l/2,z=s.y*y+u/2,b=(s.y+s.height)*y+u/2,{rings:S}=p;R<0&&(S[0][0][0]-=R,S[0][3][0]-=R,S[0][4][0]-=R),z<0&&(S[0][0][1]+=z,S[0][1][1]+=z,S[0][4][1]+=z),k>l&&(S[0][1][0]-=k-l,S[0][2][0]-=k-l),b>u&&(S[0][2][1]+=b-u,S[0][3][1]+=b-u)}}g.width=l*I,g.height=u*I;const v=1;g.width+=2*v,g.height+=2*v;const x=g.getContext("2d"),D=ne.createIdentity();return D.translate(-P,-w),D.scale(y*I,-y*I),D.translate(l*I/2+v,u*I/2+v),x.clearRect(0,0,g.width,g.height),new ie(x,m,D,!0).drawSymbol(M,p),x.getImageData(0,0,g.width,g.height)}async analyzeCIMSymbol(e,t,n,i,a){const r=[],h=t?{geometryType:i,spatialReference:this._spatialReference,fields:t}:null;let o;await re(e.data,h,this._cimResourceManager,r,this._avoidSDF),Z(a);for(const c of r)c.cim.type!=="CIMPictureMarker"&&c.cim.type!=="CIMPictureFill"&&c.cim.type!=="CIMPictureStroke"||(o||(o=[]),o.push(this._fetchPictureMarkerResource(c,a))),n&&c.type==="text"&&typeof c.text=="string"&&c.text.includes("[")&&(c.text=he(n,c.text,c.cim.textCase));return o&&await Promise.all(o),r}rasterizeCIMSymbol3D(e,t,n,i,a,r){const h=[];for(const o of e){i&&typeof i.scaleFactor=="function"&&(i.scaleFactor=i.scaleFactor(t,a,r));const c=this._getRasterizedResource(o,t,n,i,a,r);if(!c)continue;let C=0,M=c.anchorX||0,g=c.anchorY||0,m=!1,d=0,l=0;if(n==="esriGeometryPoint"){const u=T(i);if(d=_(o.offsetX,t,a,r)*u||0,l=_(o.offsetY,t,a,r)*u||0,o.type==="marker")C=_(o.rotation,t,a,r)||0,m=!!o.rotateClockwise&&o.rotateClockwise;else if(o.type==="text"){if(C=_(o.angle,t,a,r)||0,o.horizontalAlignment!==void 0)switch(o.horizontalAlignment){case"left":M=-.5;break;case"right":M=.5;break;default:M=0}if(o.verticalAlignment!==void 0)switch(o.verticalAlignment){case"top":g=.5;break;case"bottom":g=-.5;break;case"baseline":g=-.25;break;default:g=0}}}c!=null&&h.push({angle:C,rotateClockWise:m,anchorX:M,anchorY:g,offsetX:d,offsetY:l,rasterizedResource:c})}return this.getSymbolImage(h)}getSymbolImage(e){const t=document.createElement("canvas"),n=A(t.getContext("2d"));let i=0,a=0,r=0,h=0;const o=[];for(let g=0;g<e.length;g++){const m=e[g],d=m.rasterizedResource;if(!d)continue;const l=d.size,u=m.offsetX,p=m.offsetY,s=m.anchorX,I=m.anchorY,y=m.rotateClockWise||!1;let P=m.angle,w=F(u)-l[0]*(.5+s),v=F(p)-l[1]*(.5+I),x=w+l[0],D=v+l[1];if(P){y&&(P=-P);const z=Math.sin(P*Math.PI/180),b=Math.cos(P*Math.PI/180),S=w*b-v*z,j=w*z+v*b,U=w*b-D*z,W=w*z+D*b,L=x*b-D*z,N=x*z+D*b,V=x*b-v*z,q=x*z+v*b;w=Math.min(S,U,L,V),v=Math.min(j,W,N,q),x=Math.max(S,U,L,V),D=Math.max(j,W,N,q)}i=w<i?w:i,a=v<a?v:a,r=x>r?x:r,h=D>h?D:h;const R=n.createImageData(d.size[0],d.size[1]);R.data.set(new Uint8ClampedArray(d.image.buffer));const k={offsetX:u,offsetY:p,rotateClockwise:y,angle:P,rasterizedImage:R,anchorX:s,anchorY:I};o.push(k)}t.width=r-i,t.height=h-a;const c=-i,C=h;for(let g=0;g<o.length;g++){const m=o[g],d=this._imageDataToCanvas(m.rasterizedImage),l=m.rasterizedImage.width,u=m.rasterizedImage.height,p=c-l*(.5+m.anchorX),s=C-u*(.5-m.anchorY);if(m.angle){const I=(360-m.angle)*Math.PI/180;n.save(),n.translate(F(m.offsetX),-F(m.offsetY)),n.translate(c,C),n.rotate(I),n.translate(-c,-C),n.drawImage(d,p,s),n.restore()}else n.drawImage(d,p+F(m.offsetX),s-F(m.offsetY))}const M=new $({x:c/t.width-.5,y:C/t.height-.5});return{imageData:t.width!==0&&t.height!==0?n.getImageData(0,0,t.width,t.height):n.createImageData(1,1),anchorPosition:M}}async _fetchPictureMarkerResource(e,t){const n=e.materialHash;if(!this._pictureMarkerCache.get(n)){const i=(await ee(e.cim.url,{responseType:"image",signal:t&&t.signal})).data;this._pictureMarkerCache.set(n,i)}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,n=A(t.getContext("2d"));return t.width=e.width,t.height=e.height,n.putImageData(e,0,0),t}_imageTo32Array(e,t,n,i){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const a=this._imageDataCanvas,r=A(a.getContext("2d"));if(a.width=t,a.height=n,r.drawImage(e,0,0,t,n),i){r.save();const h=new te(i);r.fillStyle=h.toHex(),r.globalCompositeOperation="multiply",r.fillRect(0,0,t,n),r.globalCompositeOperation="destination-atop",r.drawImage(e,0,0,t,n),r.restore()}return new Uint32Array(r.getImageData(0,0,t,n).data.buffer)}_getRasterizedResource(e,t,n,i,a,r){let h,o,c;if(e.type==="text")return this._rasterizeTextResource(e,t,i,a,r);({analyzedCIM:h,hash:o}=de(e,t,a,r));const g=T(i);if(e.cim.type==="CIMPictureMarker"){const l=_(e.size,t,a,r)*g,{image:u,width:p,height:s}=A(this._getPictureResource(e,l,_(e.color,t,a,r)));return c={image:u,size:[p,s],sdf:!1,simplePattern:!1,anchorX:e.anchorPoint?e.anchorPoint.x:0,anchorY:e.anchorPoint?e.anchorPoint.y:0},c}le(h,g,{preserveOutlineWidth:!1});const m=h;o+=n,i&&(o+=JSON.stringify(i));const d=this._resourceCache;return d.has(o)?d.get(o):(c=this._rasterizer.rasterizeJSONResource({cim:m,type:e.type,url:e.url,mosaicHash:o,size:null,path:null},window.devicePixelRatio||1,this._avoidSDF),d.set(o,c),c)}_rasterizeTextResource(e,t,n,i,a){const r=T(n),h=_(e.text,t,i,a);if(!h||h.length===0)return null;const o=_(e.fontName,t,i,a),c=_(e.style,t,i,a),C=_(e.weight,t,i,a),M=_(e.decoration,t,i,a),g=_(e.size,t,i,a)*r,m=_(e.horizontalAlignment,t,i,a),d=_(e.verticalAlignment,t,i,a),l=J(_(e.color,t,i,a)),u=J(_(e.outlineColor,t,i,a)),p={color:l,size:g,horizontalAlignment:m,verticalAlignment:d,font:{family:o,style:c,weight:C,decoration:M},halo:{size:_(e.outlineSize,t,i,a)||0,color:u,style:c},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(h,p)}_getPictureResource(e,t,n){const i=this._pictureMarkerCache.get(e.materialHash);if(!i)return null;const a=i.height/i.width,r=t?a>1?F(t):F(t)/a:i.width,h=t?a>1?F(t)*a:F(t):i.height;return{image:this._imageTo32Array(i,r,h,n),width:r,height:h}}}function fe(f,e,t,n){const a=-e/2+1,r=e/2-1,h=t/2-1,o=-t/2+1;switch(f){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[r,0]]]};default:return n==="legend"?{rings:[[[a,h],[r,0],[r,o],[a,o],[a,h]]]}:{rings:[[[a,h],[r,h],[r,o],[a,o],[a,h]]]}}}function de(f,e,t,n){let i,a;return typeof f.materialHash=="function"?(i=(0,f.materialHash)(e,t,n),a=oe(f.cim,f.materialOverrides)):(i=f.materialHash,a=f.cim),{analyzedCIM:a,hash:i}}const G=new ue(null,!0),O=E(H.size),B=E(H.maxSize),pe=E(H.lineWidth),ye=1;function we(f){const e=f==null?void 0:f.size;return typeof e=="number"?{width:e,height:e}:{width:e!=null&&typeof e=="object"&&"width"in e?e.width:null,height:e!=null&&typeof e=="object"&&"height"in e?e.height:null}}async function Ze(f,e={}){var I;const{node:t,opacity:n,symbolConfig:i}=e,a=typeof i=="object"&&"isSquareFill"in i&&i.isSquareFill,r=e.cimOptions||e,h=r.geometryType||Q((I=f==null?void 0:f.data)==null?void 0:I.symbol),o=we(e),{feature:c,fieldMap:C}=r;if(o.width==null||o.height==null){const y=await K.resolveSymbolOverrides(f.data,c,null,C,h);if(!y)return null;(f=f.clone()).data={type:"CIMSymbolReference",symbol:y},f.data.primitiveOverrides=void 0;const P=[];X.fetchResources(y,G.resourceManager,P),P.length>0&&await Promise.all(P);const w=X.getEnvelope(y,null,G.resourceManager),v=w==null?void 0:w.width,x=w==null?void 0:w.height;o.width=h==="esriGeometryPolygon"?O:h==="esriGeometryPolyline"?pe:v!=null&&isFinite(v)?Math.min(v,B):O,o.height=h==="esriGeometryPolygon"?O:x!=null&&isFinite(x)?Math.max(Math.min(x,B),ye):O}const M=await G.rasterizeCIMSymbolAsync(f,c,o,a||h!=="esriGeometryPolygon"?Y.Preview:Y.Legend,C,h);if(!M)return null;const{width:g,height:m}=M,d=document.createElement("canvas");d.width=g,d.height=m,d.getContext("2d").putImageData(M,0,0);const l=F(o.width),u=F(o.height),p=new Image(l,u);p.src=d.toDataURL(),n!=null&&(p.style.opacity=`${n}`);let s=p;if(e.effectView!=null){const y={shape:{type:"image",x:0,y:0,width:l,height:u,src:p.src},fill:null,stroke:null,offset:[0,0]};s=me([[y]],[l,u],{effectView:e.effectView})}return t&&s&&t.appendChild(s),s}export{Ze as previewCIMSymbol};
