import{l as w,aO as y,a2 as a,s as I,e as l,y as c,a as V}from"./index-c754ff65.js";import{i as v}from"./GraphicsCollection-b80722b0.js";import"./Rasterizer-7c00bea5.js";import"./EffectView-a1fb6514.js";import"./Container-72cba08e.js";import"./BufferPool-34e9b674.js";import"./color-6aec3839.js";import"./WGLContainer-e2488f5a.js";import"./enums-64ab819c.js";import"./Texture-ca46920b.js";import"./capabilities-57d1a30a.js";import"./ProgramTemplate-9f1c124b.js";import"./MaterialKey-5b247dd4.js";import"./utils-7263c34f.js";import"./VertexArrayObject-07c1da56.js";import"./number-b10bd8f5.js";import"./StyleDefinition-fbc907c2.js";import{y as H,r as T}from"./TileStrategy-1967197e.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-65f59e80.js";import"./OrderIndependentTransparency-e1b3a745.js";import"./floatRGBA-4f7fa53a.js";import"./webgl-debug-b1f7a2c5.js";import{a as q}from"./GraphicsView2D-734762b1.js";import"./AttributeStoreView-bcdc844b.js";import"./earcut-61f7b102.js";import"./featureConversionUtils-c00360ef.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-703059af.js";import{t as U,o as g,n as f}from"./imageUtils-46b75651.js";import{f as Q,u as S}from"./LayerView-968a0443.js";import{n as b}from"./HighlightGraphicContainer-d2d9607c.js";import{h as C}from"./TileInfoView-ccee1155.js";import{e as d}from"./TileKey-b1f5cdb9.js";import{i as k}from"./RefreshableLayerView-22763354.js";import{P as F,S as P,a as G}from"./drapedUtils-921690e1.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-02b56dc2.js";import"./fontUtils-afce1abc.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-5c57438c.js";import"./GeometryUtils-fea59923.js";import"./enums-55085e26.js";import"./utils-bd924f31.js";import"./alignmentUtils-ae955d28.js";import"./definitions-f329b961.js";import"./mat2d-e11be45e.js";import"./vec2-bbd3449a.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-193e54d0.js";import"./rasterizingUtils-74cec9f6.js";import"./MapView-2d5cc699.js";import"./Viewpoint-eb6ec031.js";import"./Cyclical-5c5da130.js";import"./CollectionFlattener-459cb615.js";import"./TileInfo-2589d4ff.js";import"./TileKey-b87e0dc5.js";import"./widget-7352089c.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./AttachmentInfo-2f7fbe5e.js";import"./Heading-adb0ad8a.js";import"./symbolUtils-5e5f8d3d.js";import"./utils-7a1e2b28.js";import"./ItemCache-096925bc.js";import"./colorUtils-c0f43caf.js";import"./webStyleSymbolUtils-5cb46bea.js";import"./devEnvironmentUtils-5002a058.js";import"./executeQueryJSON-ca6c73e1.js";import"./utils-3b5f5c5a.js";import"./query-d95b3dd5.js";import"./pbfQueryUtils-06c77b54.js";import"./pbf-f46def03.js";import"./OptimizedGeometry-9aa8664b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Scheduler-68df8c73.js";import"./layerViewUtils-5da1782e.js";import"./GoTo-9b5cecfc.js";import"./accessibleHandler-b82b4bb4.js";import"./vmEvent-d773b6c5.js";import"./Map-e64f8eb2.js";import"./Basemap-11f6c81d.js";import"./loadAll-026b7227.js";import"./writeUtils-a7e8e976.js";import"./basemapUtils-abd7da37.js";import"./TablesMixin-8184194b.js";import"./ViewingMode-915d19cb.js";import"./unitBezier-881ac1eb.js";import"./vec2f64-22afc56f.js";import"./mat3-21bcfd83.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./imageutils-b0a7b4c6.js";import"./Matcher-10c827e6.js";import"./visualVariablesUtils-50880e5a.js";import"./visualVariablesUtils-7dbd5d40.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-0c6b5b1e.js";import"./ExpandedCIM-2a6dd26b.js";import"./CircularArray-3a8652cf.js";import"./ComputedAttributeStorage-b555102a.js";import"./arcadeTimeUtils-ef4a84e4.js";import"./executionError-fb3f283a.js";import"./centroid-335ed93e.js";import"./basicInterfaces-b7051eb1.js";import"./normalizeUtilsSync-f1c7dfdb.js";import"./normalizeUtilsCommon-258cba9f.js";import"./projectionSupport-60e6d2f8.js";import"./json-48e3ea08.js";import"./schemaUtils-9a6e7dda.js";import"./createSymbolSchema-21e81f0c.js";import"./util-e5019f71.js";import"./TiledDisplayObject-accbee08.js";import"./BitmapTileContainer-2b06fdfb.js";import"./Bitmap-b4ca4b09.js";import"./TileContainer-842f76b1.js";import"./BaseGraphicContainer-862908ea.js";import"./FeatureContainer-86576b95.js";import"./quickselect-56c5966e.js";import"./scaleUtils-33b708da.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-08cbbcae.js";import"./popupUtils-591ed28b.js";const R=[0,0];let o=class extends k(U(Q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new v,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new C(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new H({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,e)=>this.fetchTile(i,e)}),this._tileStrategy=new T({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),F(this,this.layer)){const i=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(e,r)=>G(e,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(e,r)=>{i.graphicUpdateHandler({graphic:e,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(w(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return y((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(t=>this._enqueueTileFetch(t)))}isUpdating(){var t;return((t=this._fetchQueue)==null?void 0:t.updating)??!1}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(R,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(i),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:m=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(p){if(!a(p)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(m<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const u=new d(n),_=await this.fetchTile(u,{...i,resamplingLevel:m+1});return f(this._tileInfoView,_,u,t)}}throw p}const h=new d(0,0,0,0);let s;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,h,{signal:r}),h.level!==t.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);s=await this._fetchImage(h,r)}catch(p){if(a(p))throw p;s=await this._fetchImage(t,r)}return this.resampling?f(this._tileInfoView,s,h,t):s}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){a(i)||I.getLogger(this.declaredClass).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};l([c()],o.prototype,"_fetchQueue",void 0),l([c()],o.prototype,"resampling",null),o=l([V("esri.views.2d.layers.TileLayerView2D")],o);const Yi=o;export{Yi as default};
